<?php

/**
 * @file
 * Adds URL Redirect and UI to set paths to redirect.
 */
use Drupal\Component\Utility\Html;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_page_attachments().
 */
function url_redirect_page_attachments(array &$page) {
  $user = \Drupal::currentUser();
  // Check URL path in url_redirect entity.
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $path = HTML::escape('<front>');
    $path_check = url_redirect_path_check($path);
  }
  else {
    $path = HTML::escape(\Drupal::service('path.current')->getPath());
    $path_check = url_redirect_path_check($path);
    if (!$path_check) {
      $path_check = url_redirect_path_check(substr($path, 1));
    }
  }
  if ($path_check) {
    $id = array_keys($path_check);
    $url_redirect_load = \Drupal::entityTypeManager()->getStorage('url_redirect')->load($id[0]);
    $check_for = $url_redirect_load->get_checked_for();
    $message = $url_redirect_load->get_message();
    if ($message == t('Yes')) {
      drupal_set_message(t("You have been redirected to '@link_path'.", array('@link_path' => $url_redirect_load->get_redirect_path())));
    }
    // Check for Role.
    if ($check_for == 'Role') {
      $role_check_array = $url_redirect_load->get_roles();
      $user_role_check_array = $user->getRoles();
      $checked_result = array_intersect($role_check_array, $user_role_check_array);
      if ($checked_result) {
        url_redirect_redirect($url_redirect_load->get_redirect_path());
      }
    }
    // Check for User.
    elseif ($check_for == 'User') {
      $user_check = $url_redirect_load->get_users();
      if ($user_check) {
        foreach ($user_check as $ids) {
          $uids[$ids['target_id']] = $ids['target_id'];
        }
        $user_check_array = array_keys($uids);
        $uid = array($user->id());
        $checked_user_result = array_intersect($user_check_array, $uid);
        if ($checked_user_result) {
          url_redirect_redirect($url_redirect_load->get_redirect_path());
        }
      }
      elseif (empty($user_check)) {
        url_redirect_redirect($url_redirect_load->get_redirect_path());
      }
    }
  }
}

/**
 * Checking the path.
 */
function url_redirect_path_check($path) {
  $path_check = \Drupal::entityQuery('url_redirect')
      ->condition('path', $path)
      ->condition('status', 1)
      ->execute();
  return $path_check;
}

/**
 * Implements to redirect user from specific path to defined path(redirect path).
 */
function url_redirect_redirect($path) {
  global $base_url;
  $response = new RedirectResponse($base_url . '/' . $path, 302);
  $response->send();
  return;
}
